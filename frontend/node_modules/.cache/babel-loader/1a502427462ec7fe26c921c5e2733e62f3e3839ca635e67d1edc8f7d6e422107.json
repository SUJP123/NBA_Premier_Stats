{"ast":null,"code":"var _jsxFileName = \"/Users/sujaypatel/Downloads/NBA_Priemer_Stats/frontend/src/pages/PastStats.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PastStats() {\n  _s();\n  const [season, setSeason] = useState(null);\n  const [seasonType, setSeasonType] = useState(null);\n  const [stat, setStat] = useState(null);\n  useEffect(() => {\n    if (season && seasonType && stat) {\n      axios.get(`/api/historic/top${stat}?season=${season}&seasonType=${seasonType}`).then(response => {\n        response.data;\n      }).catch(error => {\n        console.log(\"Make sure each parameter is set\");\n      });\n    }\n  }, [season, seasonType, stat]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(PastStats, \"sOAXJbmgeQBqVou/bkRI97xmoCY=\");\n_c = PastStats;\nvar _c;\n$RefreshReg$(_c, \"PastStats\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PastStats","_s","season","setSeason","seasonType","setSeasonType","stat","setStat","get","then","response","data","catch","error","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sujaypatel/Downloads/NBA_Priemer_Stats/frontend/src/pages/PastStats.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n\nfunction PastStats() {\n    const [season, setSeason] = useState(null);\n    const [seasonType, setSeasonType] = useState(null);\n    const [stat, setStat] = useState(null);\n\n    useEffect( () => {\n            if (season && seasonType && stat) {\n                axios.get(`/api/historic/top${stat}?season=${season}&seasonType=${seasonType}`)\n                    .then(response => {response.data})\n                    .catch(error => {console.log(\"Make sure each parameter is set\")})\n            }\n        },\n        [season, seasonType, stat]\n    );\n\n    return (\n        <div>\n            \n        </div>\n\n    )\n\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAE,MAAM;IACT,IAAIM,MAAM,IAAIE,UAAU,IAAIE,IAAI,EAAE;MAC9BT,KAAK,CAACW,GAAG,CAAC,oBAAoBF,IAAI,WAAWJ,MAAM,eAAeE,UAAU,EAAE,CAAC,CAC1EK,IAAI,CAACC,QAAQ,IAAI;QAACA,QAAQ,CAACC,IAAI;MAAA,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAI;QAACC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAAA,CAAC,CAAC;IACzE;EACJ,CAAC,EACD,CAACb,MAAM,EAAEE,UAAU,EAAEE,IAAI,CAC7B,CAAC;EAED,oBACIP,OAAA;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAId;AAAClB,EAAA,CAtBQD,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}