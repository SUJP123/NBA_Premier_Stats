{"ast":null,"code":"var _jsxFileName = \"/Users/sujaypatel/Downloads/NBA_Priemer_Stats/frontend/src/pages/PastStats.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PastStats() {\n  _s();\n  const [season, setSeason] = useState('');\n  const [seasonType, setSeasonType] = useState('');\n  const [stat, setStat] = useState('');\n  const [topPlayers, setTopPlayers] = useState([]);\n  const topFivePlayers = topPlayers.slice(0, 5);\n  const seasons = ['2014-15', '2015-16', '2016-17', '2017-18', '2018-19', '2019-20', '2020-21', '2021-22', '2022-23', '2023-24'];\n  const seasonTypes = [{\n    value: 'Regular%20Season',\n    label: 'Regular Season'\n  }, {\n    value: 'Playoffs',\n    label: 'Playoffs'\n  }];\n  const stats = ['Pts', 'Ast', 'Reb', 'Stl', 'Blk', 'Fg3Pct', 'FgPct', 'FtPct', 'Tov']; // Define available stats\n\n  useEffect(() => {\n    if (season && seasonType && stat) {\n      axios.get(`/api/historic/top${stat}?season=${season}&seasonType=${seasonType}`).then(response => {\n        setTopPlayers([response.data]); // Assuming response.data is a single player object\n      }).catch(() => {\n        console.log(\"Make sure each parameter is set\");\n      });\n    }\n  }, [season, seasonType, stat]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Season:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: season,\n        onChange: e => setSeason(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a season\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), seasons.map(season => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: season,\n          children: season\n        }, season, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Season Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: seasonType,\n        onChange: e => setSeasonType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a season type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), seasonTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type.value,\n          children: type.label\n        }, type.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Stat:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: stat,\n        onChange: e => setStat(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a stat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), stats.map(stat => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: stat,\n          children: stat\n        }, stat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Top 5 Players for \", stat, \" in \", season, \" (\", seasonType ? seasonType.replace('%20', ' ') : '', \"):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: topFivePlayers.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Player: \", player.player]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Team: \", player.team]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Points: \", player.pts]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Assists: \", player['ast']]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rebounds: \", player.reb]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Steals: \", player.stl]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Blocks: \", player.blk]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"FG%: \", player.fg_Pct]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"3P%: \", player.fg3_Pct]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"FT%: \", player.ft_Pct]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Turnovers: \", player.tov]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(PastStats, \"ia51m0DvDcJD8+iL49SLCN9nhP8=\");\n_c = PastStats;\nexport default PastStats;\nvar _c;\n$RefreshReg$(_c, \"PastStats\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PastStats","_s","season","setSeason","seasonType","setSeasonType","stat","setStat","topPlayers","setTopPlayers","topFivePlayers","slice","seasons","seasonTypes","value","label","stats","get","then","response","data","catch","console","log","children","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","type","replace","player","index","team","pts","reb","stl","blk","fg_Pct","fg3_Pct","ft_Pct","tov","_c","$RefreshReg$"],"sources":["/Users/sujaypatel/Downloads/NBA_Priemer_Stats/frontend/src/pages/PastStats.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction PastStats() {\n    const [season, setSeason] = useState('');\n    const [seasonType, setSeasonType] = useState('');\n    const [stat, setStat] = useState('');\n    const [topPlayers, setTopPlayers] = useState([]);\n    const topFivePlayers = topPlayers.slice(0, 5);\n\n    const seasons = ['2014-15', '2015-16', '2016-17', '2017-18', '2018-19', '2019-20', '2020-21', '2021-22', '2022-23', '2023-24'];\n    const seasonTypes = [\n        { value: 'Regular%20Season', label: 'Regular Season' },\n        { value: 'Playoffs', label: 'Playoffs' }\n    ];\n    const stats = ['Pts', 'Ast', 'Reb', 'Stl', 'Blk', 'Fg3Pct', 'FgPct', 'FtPct', 'Tov']; // Define available stats\n\n    useEffect(() => {\n        if (season && seasonType && stat) {\n            axios.get(`/api/historic/top${stat}?season=${season}&seasonType=${seasonType}`)\n                .then(response => {\n                    setTopPlayers([response.data]); // Assuming response.data is a single player object\n                })\n                .catch(() => {\n                    console.log(\"Make sure each parameter is set\");\n                });\n        }\n    }, [season, seasonType, stat]);\n\n    return (\n        <div>\n            <label>\n                Select Season:\n                <select value={season} onChange={e => setSeason(e.target.value)}>\n                    <option value=\"\">Select a season</option>\n                    {seasons.map(season => (\n                        <option key={season} value={season}>\n                            {season}\n                        </option>\n                    ))}\n                </select>\n            </label>\n\n            <label>\n                Select Season Type:\n                <select value={seasonType} onChange={e => setSeasonType(e.target.value)}>\n                    <option value=\"\">Select a season type</option>\n                    {seasonTypes.map(type => (\n                        <option key={type.value} value={type.value}>\n                            {type.label}\n                        </option>\n                    ))}\n                </select>\n            </label>\n\n            <label>\n                Select Stat:\n                <select value={stat} onChange={e => setStat(e.target.value)}>\n                    <option value=\"\">Select a stat</option>\n                    {stats.map(stat => (\n                        <option key={stat} value={stat}>\n                            {stat}\n                        </option>\n                    ))}\n                </select>\n            </label>\n\n            <div>\n                <h2>\n                    Top 5 Players for {stat} in {season} ({seasonType ? seasonType.replace('%20', ' ') : ''}):\n                </h2>\n                <ul>\n                    {topFivePlayers.map((player, index) => (\n                        <li key={index}>\n                            <p>Player: {player.player}</p>\n                            <p>Team: {player.team}</p>\n                            <p>Points: {player.pts}</p>\n                            <p>Assists: {player['ast']}</p>\n                            <p>Rebounds: {player.reb}</p>\n                            <p>Steals: {player.stl}</p>\n                            <p>Blocks: {player.blk}</p>\n                            <p>FG%: {player.fg_Pct}</p>\n                            <p>3P%: {player.fg3_Pct}</p>\n                            <p>FT%: {player.ft_Pct}</p>\n                            <p>Turnovers: {player.tov}</p>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default PastStats;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMe,cAAc,GAAGF,UAAU,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAE7C,MAAMC,OAAO,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAC9H,MAAMC,WAAW,GAAG,CAChB;IAAEC,KAAK,EAAE,kBAAkB;IAAEC,KAAK,EAAE;EAAiB,CAAC,EACtD;IAAED,KAAK,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAW,CAAC,CAC3C;EACD,MAAMC,KAAK,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;;EAEtFpB,SAAS,CAAC,MAAM;IACZ,IAAIM,MAAM,IAAIE,UAAU,IAAIE,IAAI,EAAE;MAC9BT,KAAK,CAACoB,GAAG,CAAC,oBAAoBX,IAAI,WAAWJ,MAAM,eAAeE,UAAU,EAAE,CAAC,CAC1Ec,IAAI,CAACC,QAAQ,IAAI;QACdV,aAAa,CAAC,CAACU,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;MACpC,CAAC,CAAC,CACDC,KAAK,CAAC,MAAM;QACTC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAClD,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,CAACrB,MAAM,EAAEE,UAAU,EAAEE,IAAI,CAAC,CAAC;EAE9B,oBACIP,OAAA;IAAAyB,QAAA,gBACIzB,OAAA;MAAAyB,QAAA,GAAO,gBAEH,eAAAzB,OAAA;QAAQe,KAAK,EAAEZ,MAAO;QAACuB,QAAQ,EAAEC,CAAC,IAAIvB,SAAS,CAACuB,CAAC,CAACC,MAAM,CAACb,KAAK,CAAE;QAAAU,QAAA,gBAC5DzB,OAAA;UAAQe,KAAK,EAAC,EAAE;UAAAU,QAAA,EAAC;QAAe;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACxCnB,OAAO,CAACoB,GAAG,CAAC9B,MAAM,iBACfH,OAAA;UAAqBe,KAAK,EAAEZ,MAAO;UAAAsB,QAAA,EAC9BtB;QAAM,GADEA,MAAM;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEX,CACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAERhC,OAAA;MAAAyB,QAAA,GAAO,qBAEH,eAAAzB,OAAA;QAAQe,KAAK,EAAEV,UAAW;QAACqB,QAAQ,EAAEC,CAAC,IAAIrB,aAAa,CAACqB,CAAC,CAACC,MAAM,CAACb,KAAK,CAAE;QAAAU,QAAA,gBACpEzB,OAAA;UAAQe,KAAK,EAAC,EAAE;UAAAU,QAAA,EAAC;QAAoB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC7ClB,WAAW,CAACmB,GAAG,CAACC,IAAI,iBACjBlC,OAAA;UAAyBe,KAAK,EAAEmB,IAAI,CAACnB,KAAM;UAAAU,QAAA,EACtCS,IAAI,CAAClB;QAAK,GADFkB,IAAI,CAACnB,KAAK;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAERhC,OAAA;MAAAyB,QAAA,GAAO,cAEH,eAAAzB,OAAA;QAAQe,KAAK,EAAER,IAAK;QAACmB,QAAQ,EAAEC,CAAC,IAAInB,OAAO,CAACmB,CAAC,CAACC,MAAM,CAACb,KAAK,CAAE;QAAAU,QAAA,gBACxDzB,OAAA;UAAQe,KAAK,EAAC,EAAE;UAAAU,QAAA,EAAC;QAAa;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACtCf,KAAK,CAACgB,GAAG,CAAC1B,IAAI,iBACXP,OAAA;UAAmBe,KAAK,EAAER,IAAK;UAAAkB,QAAA,EAC1BlB;QAAI,GADIA,IAAI;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAET,CACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAERhC,OAAA;MAAAyB,QAAA,gBACIzB,OAAA;QAAAyB,QAAA,GAAI,oBACkB,EAAClB,IAAI,EAAC,MAAI,EAACJ,MAAM,EAAC,IAAE,EAACE,UAAU,GAAGA,UAAU,CAAC8B,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,EAAE,EAAC,IAC5F;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLhC,OAAA;QAAAyB,QAAA,EACKd,cAAc,CAACsB,GAAG,CAAC,CAACG,MAAM,EAAEC,KAAK,kBAC9BrC,OAAA;UAAAyB,QAAA,gBACIzB,OAAA;YAAAyB,QAAA,GAAG,UAAQ,EAACW,MAAM,CAACA,MAAM;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9BhC,OAAA;YAAAyB,QAAA,GAAG,QAAM,EAACW,MAAM,CAACE,IAAI;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1BhC,OAAA;YAAAyB,QAAA,GAAG,UAAQ,EAACW,MAAM,CAACG,GAAG;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3BhC,OAAA;YAAAyB,QAAA,GAAG,WAAS,EAACW,MAAM,CAAC,KAAK,CAAC;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/BhC,OAAA;YAAAyB,QAAA,GAAG,YAAU,EAACW,MAAM,CAACI,GAAG;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7BhC,OAAA;YAAAyB,QAAA,GAAG,UAAQ,EAACW,MAAM,CAACK,GAAG;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3BhC,OAAA;YAAAyB,QAAA,GAAG,UAAQ,EAACW,MAAM,CAACM,GAAG;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3BhC,OAAA;YAAAyB,QAAA,GAAG,OAAK,EAACW,MAAM,CAACO,MAAM;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3BhC,OAAA;YAAAyB,QAAA,GAAG,OAAK,EAACW,MAAM,CAACQ,OAAO;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5BhC,OAAA;YAAAyB,QAAA,GAAG,OAAK,EAACW,MAAM,CAACS,MAAM;UAAA;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3BhC,OAAA;YAAAyB,QAAA,GAAG,aAAW,EAACW,MAAM,CAACU,GAAG;UAAA;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAXzBK,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC9B,EAAA,CAxFQD,SAAS;AAAA8C,EAAA,GAAT9C,SAAS;AA0FlB,eAAeA,SAAS;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}